<launch>
  <arg name="launch_driver" default="true"/>
  <arg name="camera_type" default="left"/>

<!--    &lt;!&ndash;    common parameters &ndash;&gt;-->
<!--  <arg name="image_0" default="camera_0" description="image raw topic name"/>-->
<!--  <arg name="image_0" default="camera_0" description="image raw topic name"/>-->

<!--  &lt;!&ndash;    tensorrt params &ndash;&gt;-->
<!--  <arg name="mode" default="FP32"/>-->
<!--  <arg name="yolo_type" default="yolov3" description="choose image raw number(0-7)"/>-->
<!--  <arg name="label_file" default="coco.names" description="choose image raw number(0-7)"/>-->
<!--  <arg name="gpu_id" default="0" description="choose image raw number(0-7)"/>-->
<!--  <arg name="use_intra_process" default="true"/>-->
<!--  <arg name="use_multithread" default="true"/>-->

<!--  <arg name="yolox_model" default="yolox_tiny"  description="yolox_tiny, yolox-sPlus-T4-960x960-pseudo-finetune"/>-->
<!--  <arg name="yolox_launch_file" default="yolox_tiny"  description="yolox_tiny, yolox_s_plus_opt or multiple_yolox"/>-->

  <group>
    <push-ros-namespace namespace="camera"/>
    <group>
      <push-ros-namespace namespace="traffic_light"/>

      <!-- (usb_cam_node is assumed to have launched on logging PC) -->
      <node pkg="topic_tools" exec="relay" name="tl_camera_info_relay" output="log">
        <param name="input_topic" value="$(var camera_type)/camera_info"/>
        <param name="output_topic" value="camera_info"/>
        <param name="type" value="sensor_msgs/msg/CameraInfo"/>
        <param name="reliability" value="best_effort"/>
      </node>

      <node pkg="topic_tools" exec="relay" name="tl_compressed_image_relay" output="log">
        <param name="input_topic" value="$(var camera_type)/image_raw/compressed"/>
        <param name="output_topic" value="image_raw/compressed"/>
        <param name="type" value="sensor_msgs/msg/CompressedImage"/>
        <param name="reliability" value="best_effort"/>
      </node>

          <!-- Tensorrt_yolo
    (https://autowarefoundation.github.io/autoware-documentation/pr-480/how-to-guides/integrating-autoware/creating-vehicle-and-sensor-model/creating-sensor-model/#camera-launching).
    Todo: launch in perception instead or add to realsense container (https://github.com/leo-drive/tutorial_vehicle_sensor_kit_launch/blob/main/common_sensor_launch/launch/camera_node_container.launch.py)
    Todo: add YOLO params -->
<!--      <include file="$(find-pkg-share tensorrt_yolox)/launch/$(var yolox_launch_file).launch.xml"> &lt;!&ndash; &ndash;&gt;-->
<!--        <arg name="input/image" value="camera/color/image_raw"/>-->
<!--  &lt;!&ndash;      <arg name="output/objects" value="/perception/object_recognition/detection/rois0"/>&ndash;&gt;-->
<!--  &lt;!&ndash;      <arg name="model_name" value="$(var yolox_model)"/>&ndash;&gt;-->
<!--  &lt;!&ndash;      <arg name="data_path" value="$(env HOME)/autoware_data" description="packages data and artifacts directory path"/>&ndash;&gt;-->
<!--  &lt;!&ndash;      <arg name="model_path" value="$(var data_path)/tensorrt_yolox"/>&ndash;&gt;-->
<!--  &lt;!&ndash;      <arg name="score_threshold" value="0.35"/>&ndash;&gt;-->
<!--  &lt;!&ndash;      <arg name="nms_threshold" value="0.7"/>&ndash;&gt;-->
<!--  &lt;!&ndash;      <arg name="precision" value="int8" description="operation precision to be used on inference. Valid value is one of: [fp32, fp16, int8]"/>&ndash;&gt;-->
<!--  &lt;!&ndash;      <arg name="calibration_algorithm" value="Entropy" description="Calibration algorithm to be used for quantization when precision==int8. Valid value is one of: [Entropy, (Legacy | Percentile), MinMax]" />&ndash;&gt;-->
<!--  &lt;!&ndash;      <arg name="clip_value" value="6.0" description="If positive value is specified, the value of each layer output will be clipped between [0.0, clip_value]. This option is valid only when precision==int8 and used to manually specify the dynamic range instead of using any calibration."  />&ndash;&gt;-->
<!--  &lt;!&ndash;      <arg name="preprocess_on_gpu" value="true" description="If true, pre-processing is performed on GPU"/>&ndash;&gt;-->
<!--  &lt;!&ndash;      <arg name="use_decompress" value="true" description="use image decompress"/>&ndash;&gt;-->
<!--  &lt;!&ndash;      <arg name="build_only" value="false" description="exit after trt engine is built"/>&ndash;&gt;-->
<!--      </include>-->
    </group>
  </group>
</launch>