<launch>
  <arg name="launch_driver" default="true" description="do launch driver"/>
  <arg name="vehicle_mirror_param_file" description="path to the file of vehicle mirror position yaml"/>
  <arg name="pointcloud_container_name" default="pointcloud_container"/>
  <arg name="vehicle_id" default="$(env VEHICLE_ID default)"/>

  <group>
    <!-- LIDAR Driver -->
<!--    <include file="$(find-pkg-share f1tenth_sensor_kit_launch)/launch/lidar.launch.xml">-->
<!--      <arg name="launch_driver" value="$(var launch_driver)"/>-->
<!--      <arg name="vehicle_mirror_param_file" value="$(var vehicle_mirror_param_file)"/>-->
<!--      <arg name="pointcloud_container_name" value="$(var pointcloud_container_name)"/>-->
<!--    </include>-->

    <!-- LaserScan Driver -->
    <include file="$(find-pkg-share f1tenth_sensor_kit_launch)/launch/2d_lidar.launch.py">
      <arg name="lidar_config" value="$(find-pkg-share f1tenth_sensor_kit_launch)/config/laserscan/2d_lidar.param.yaml"/>
      <arg name="launch_filter" value="True"/>
      <arg name="laser_filter_config" value="$(find-pkg-share f1tenth_sensor_kit_launch)/config/laserscan/laser_filter.param.yaml"/>
    </include>

    <!-- Depth camera Driver -->
    <include file="$(find-pkg-share f1tenth_sensor_kit_launch)/launch/realsense_d435i.launch.py">
    </include>

    <!-- Monocular Camera Driver -->
    <!-- <include file="$(find-pkg-share f1tenth_sensor_kit_launch)/launch/camera.launch.xml">
      <arg name="launch_driver" value="$(var launch_driver)" />
    </include> -->

    <!-- IMU Driver -->
    <include file="$(find-pkg-share f1tenth_sensor_kit_launch)/launch/imu.launch.xml">
      <arg name="launch_driver" value="$(var launch_driver)"/>
    </include>

    <!-- Vehicle Velocity Converter  -->
    <include file="$(find-pkg-share vehicle_velocity_converter)/launch/vehicle_velocity_converter.launch.xml">
      <arg name="input_vehicle_velocity_topic" value="/vehicle/status/velocity_status"/>
      <arg name="output_twist_with_covariance" value="/sensing/vehicle_velocity_converter/twist_with_covariance"/>
    </include>

    <!-- Joystick control node -->
    <include file="$(find-pkg-share joy_controller)/launch/joy_controller.launch.xml">
      <arg name="config_file" value="$(find-pkg-share f1tenth_sensor_kit_launch)/config/joy/joy_controller.param.yaml"/>
      <arg name="input_joy" value="/sensing/joy"/>
      <arg name="joy_type" value="DS4"/>
      <arg name="input_odometry" value="/localization/kinematic_state" />
    </include>

    <!-- Tensorrt_yolo
    (https://autowarefoundation.github.io/autoware-documentation/pr-480/how-to-guides/integrating-autoware/creating-vehicle-and-sensor-model/creating-sensor-model/#camera-launching).
    Todo: launch in perception instead or add to realsense container (https://github.com/leo-drive/tutorial_vehicle_sensor_kit_launch/blob/main/common_sensor_launch/launch/camera_node_container.launch.py)
    Todo: add YOLO params -->
    <include file="$(find-pkg-share tensorrt_yolo)/launch/yolo.launch.xml">
      <arg name="image_raw0" value="$(var image_raw0)"/>
      <arg name="image_raw1" value="$(var image_raw1)"/>
      <arg name="image_number" value="$(var image_number)"/>
    </include>
  </group>
</launch>
